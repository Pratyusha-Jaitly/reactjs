{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from \"redux-saga\";\nimport saga from \"../Sagas/sagas\";\nimport foodReducer from \"../reducers/index\";\nvar sagaMiddleware = createSagaMiddleware();\nvar store = configureStore({\n  reducer: {\n    foodReducer: foodReducer\n  },\n  middleware: [].concat(_toConsumableArray(getDefaultMiddleware({\n    thunk: false\n  })), [sagaMiddleware])\n});\nsagaMiddleware.run(saga);\nexport default store;","map":{"version":3,"sources":["/Users/pratyusha/Documents/React JS/redux-react-native/app/store.js"],"names":["getDefaultMiddleware","applyMiddleware","compose","createStore","configureStore","createSagaMiddleware","saga","foodReducer","sagaMiddleware","store","reducer","middleware","thunk","run"],"mappings":";AAAA,SAASA,oBAAT,QAAoC,kBAApC;AACA,SAAQC,eAAR,EAAwBC,OAAxB,EAAgCC,WAAhC,QAAkD,OAAlD;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACC,OAAOC,IAAP;AACD,OAAOC,WAAP;AAEA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,IAAMI,KAAK,GAAGL,cAAc,CAAC;AAC3BM,EAAAA,OAAO,EAAC;AACMH,IAAAA,WAAW,EAAXA;AADN,GADmB;AAI3BI,EAAAA,UAAU,+BAAMX,oBAAoB,CAAC;AAAEY,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA1B,IAA8CJ,cAA9C;AAJiB,CAAD,CAA5B;AAMAA,cAAc,CAACK,GAAf,CAAmBP,IAAnB;AAEA,eAAeG,KAAf","sourcesContent":["import { getDefaultMiddleware} from \"@reduxjs/toolkit\"\nimport {applyMiddleware,compose,createStore} from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit'\n\nimport createSagaMiddleware from \"redux-saga\";\n import saga from \"../Sagas/sagas\";\nimport foodReducer from \"../reducers/index\"\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer:{\n                foodReducer\n            },\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleware]\n});\nsagaMiddleware.run(saga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}